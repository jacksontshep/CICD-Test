name: Load Test CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      duration:
        description: 'Test duration in seconds'
        required: false
        default: '60'
      target:
        description: 'Target requests per second'
        required: false
        default: '50'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    container:
      image: nodesource/nsolid:latest
      env:
        NSOLID_SAAS: ${{ secrets.NSOLID_SAAS }}
        NSOLID_APPNAME: cicd-test
        NSOLID_TAGS: ci,github-actions,load-test
        NSOLID_TRACING_ENABLED: 1
    
    strategy:
      matrix:
        test-suite: [k6, artillery]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Verify NSolid runtime
      run: |
        nsolid --version
        echo "Running with NSolid runtime"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check
    
    - name: Build application
      run: npm run build
    
    - name: Compile server
      run: npx tsc server/index.ts --outDir dist/server --module commonjs --target es2020 --esModuleInterop --skipLibCheck --resolveJsonModule
    
    - name: Start production server with NSolid
      run: |
        nsolid dist/server/index.js > server.log 2>&1 &
        echo $! > server.pid
        sleep 5
    
    - name: Health check
      run: |
        echo "Waiting for server to be ready..."
        for i in {1..30}; do
          if curl -f http://localhost:3000/api/health 2>/dev/null; then
            echo "Server is ready!"
            exit 0
          fi
          echo "Attempt $i: Server not ready yet, waiting..."
          sleep 2
        done
        echo "Server failed to start after 60 seconds"
        exit 1
    
    - name: Install k6
      if: matrix.test-suite == 'k6'
      run: |
        gpg -k
        gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | tee /etc/apt/sources.list.d/k6.list
        apt-get update
        apt-get install -y k6
    
    - name: Run k6 load test
      if: matrix.test-suite == 'k6'
      run: k6 run --duration 60s --vus 20 loadtest/k6-test.js
    
    - name: Install Artillery
      if: matrix.test-suite == 'artillery'
      run: npm install -g artillery@latest
    
    - name: Run Artillery load test
      if: matrix.test-suite == 'artillery'
      run: artillery run loadtest/artillery.yml --output report.json
    
    - name: Generate Artillery report
      if: matrix.test-suite == 'artillery' && always()
      run: artillery report report.json --output report.html
    
    - name: Get final metrics
      if: always()
      run: curl http://localhost:3000/api/metrics || echo "Failed to get metrics"
    
    - name: Check server logs
      if: always()
      run: |
        echo "Checking if server is still running..."
        ps aux | grep nsolid || echo "Server process not found"
        echo "=== Server Logs ==="
        cat server.log || echo "No server logs found"
    
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
        # Also kill any remaining nsolid processes
        pkill -f "nsolid.*server/index.ts" || true
    
    - name: Upload load test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: load-test-results-nsolid-${{ matrix.test-suite }}
        path: |
          *.json
          *.log
          *.html
