name: Load Test CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      duration:
        description: 'Test duration in seconds'
        required: false
        default: '60'
      target:
        description: 'Target requests per second'
        required: false
        default: '50'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run type-check
    
    - name: Build application
      run: npm run build
    
    - name: Start production server
      run: |
        NODE_ENV=production node dist/server/index.js &
        echo $! > server.pid
        sleep 5
    
    - name: Health check
      run: |
        curl -f http://localhost:3000/api/health || exit 1
    
    - name: Install k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run k6 load test
      run: k6 run --duration 60s --vus 20 loadtest/k6-test.js
    
    - name: Get final metrics
      run: curl http://localhost:3000/api/metrics
    
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
    
    - name: Upload load test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: load-test-results-node-${{ matrix.node-version }}
        path: |
          *.json
          *.log

  artillery-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Install Artillery
      run: npm install -g artillery@latest
    
    - name: Start production server
      run: |
        NODE_ENV=production node dist/server/index.js &
        echo $! > server.pid
        sleep 5
    
    - name: Run Artillery load test
      run: artillery run loadtest/artillery.yml --output report.json
    
    - name: Generate Artillery report
      if: always()
      run: artillery report report.json --output report.html
    
    - name: Stop server
      if: always()
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
    
    - name: Upload Artillery results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artillery-results
        path: |
          report.json
          report.html
